version: '3.7'

services:
  database:
    container_name: admin_panel_database
    restart: always
    image: postgres:13.0-alpine
    env_file:
      - ./env/.env
    volumes:
      - ./app/postgres_data:/var/lib/postgresql/data/
      - ./init_db:/docker-entrypoint-initdb.d
    expose:
      - 5432

  backend:
    container_name: admin_panel_backend
    restart: always
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    env_file:
      - ./env/.env
    volumes:
      - ./app:/usr/src/backend
    expose:
      - "8000"
    depends_on:
      - database

  elasticsearch:
    image: elasticsearch:7.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
    ports:
      - 9200:9200
    env_file:
      - .env
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - app-network

  etl:
    build:
      context: .
      dockerfile: docker/elt/Dockerfile
    container_name: etl_postgres_to_elastic
    env_file:
      - ./env/.env
    depends_on:
      - database
      - elasticsearch
    command: python main.py
    networks:
      - app-network

  nginx:
    container_name: admin_panel_nginx
    restart: always
    image: nginx:1.19.2
    volumes:
      - ./app/data/static_backend:/usr/src/backend/data/static_backend
      - ./app/data/media_backend:/usr/src/backend/data/media_backend
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/configs:/etc/nginx/conf.d/:ro
    depends_on:
      - backend
    ports:
      - "80:80"


networks:
  app-network:
    driver: bridge

volumes:
  static_value:
  media_value:

